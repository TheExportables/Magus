<Application x:Class="Magus.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Magus.Controls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Color x:Key="BorderColor_Base">#000</Color>
        <Color x:Key="BackgroundColor_Base">#FFDAE4D8</Color>

        <SolidColorBrush x:Key="BackgroundBrush_Base" Color="Transparent"/>
        <SolidColorBrush x:Key="InnerBorderBrushDark" Color="#FF0A4900"/>

        <LinearGradientBrush x:Key="InnerBorderBrushBright" StartPoint="0,0" EndPoint="1,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0" Color="Black"/>
                <GradientStop Offset="1" Color="#FF00FF23"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Item_BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0.98" Color="Transparent"/>
                <GradientStop Offset="0.99" Color="{StaticResource BorderColor_Base}"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Item_BackgroundBrush_Disabled" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#EEE" Offset="0"/>
                <GradientStop Color="#BBB" Offset="0.98"/>
                <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.99"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Item_BackgroundBrush_Selected" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Green" Offset="0.1" />
                <GradientStop Color="Black" Offset="0.11" />
                <GradientStop Color="White" Offset="0.5" />
                <GradientStop Color="{StaticResource BackgroundColor_Base}" Offset="1.0"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SideItem_BackgroundBrush_Selected" StartPoint="0,0.5" EndPoint="1,0.5">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Green" Offset="0.01" />
                <GradientStop Color="Black" Offset="0.11" />
                <GradientStop Color="White" Offset="0.3" />
                <GradientStop Color="{StaticResource BackgroundColor_Base}" Offset="1.0"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SideListViewItem_BackgroundBrush_Selected" StartPoint="0, 0.5" EndPoint="1,0.5">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Green" Offset="0.01"/>
                <GradientStop Color="Black" Offset="0.02"/>
                <GradientStop Color="White" Offset="0.05"/>
                <GradientStop Color="{StaticResource BackgroundColor_Base}" Offset="1.0"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Name="Item_BackgroundBrush_Unselected" x:Key="Item_BackgroundBrush_Unselected" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFE8FFF5" Offset="0.0"/>
                <GradientStop Color="#FFDFF6E4" Offset="0.3"/>
                <GradientStop Color="#FFC7EECE" Offset="0.7"/>
                <GradientStop Color="#FFB9DEC3" Offset="0.98"/>
                <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.99"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Item_HoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF04FF27" Offset="0.3" />
            <GradientStop Color="#FF008118" Offset="0.51" />
            <GradientStop Color="#FF04FF27" Offset="0.98" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="Item_TextBrush_Unselected" Color="#FF0D4428" />
        <SolidColorBrush x:Key="Item_TextBrush_Disabled" Color="#888" />
        <SolidColorBrush x:Key="Item_TextBrush_Hover" Color="Black" />
        <SolidColorBrush x:Key="Item_TextBrush_Selected" Color="#FF145F39" />
        <SolidColorBrush x:Key="TextBrush_ForBlack" Color="#FF008506"/>

        <LinearGradientBrush x:Key="Item_DisabledBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#CCC" Offset="0"/>
            <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.8"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Item_BorderBrush_Selected" Color="{StaticResource BorderColor_Base}" />
        <LinearGradientBrush x:Key="Item_Border_Unselected" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#AAA" Offset="0"/>
            <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.8"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Item_HoverBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0.98" Color="DarkGreen"/>
                <GradientStop Offset="0.99" Color="{StaticResource BorderColor_Base}"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- 
            Margins for TabItems - these will be set in the respective triggers.
         -->
        <Thickness x:Key="ItemMargin_Base">0,8,-4,0</Thickness>
        <Thickness x:Key="ItemMargin_Selected">-4,0,-4,0</Thickness>
        <Thickness x:Key="ItemMargin_Hover_Start">0,2,0,0</Thickness>
        <Thickness x:Key="ItemMargin_Hover_Final">0,4,0,0</Thickness>
        <Thickness x:Key="ItemPanel_Padding">4,0,0,0</Thickness>

        <Thickness x:Key="SideItemMargin_Base">8,0,0,-4</Thickness>
        <Thickness x:Key="SideItemMargin_Selected">0,-4,0,-4</Thickness>
        <Thickness x:Key="SideItemMargin_Hover_Start">2,0,0,0</Thickness>
        <Thickness x:Key="SideItemMargin_Hover_Final">4,0,0,0</Thickness>
        <Thickness x:Key="SideItemPanel_Padding">0,4,0,0</Thickness>

        <Thickness x:Key="Button_Base">4,4,4,4</Thickness>
        <Thickness x:Key="Button_Hover">8,8,8,8</Thickness>

        <Thickness x:Key="Padding_Form_Inner">10,10,10,10</Thickness>
        <Thickness x:Key="Padding_Form_Outer">20,20,20,20</Thickness>

        <Thickness x:Key="GridHeader_Base">4,4,4,0</Thickness>

        <!-- This will run when a TabItem enters the "Unselected" state -->
        <Storyboard x:Key="ItemStoryBoard_Unselected">
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" To="{StaticResource ItemMargin_Base}" FillBehavior="HoldEnd" Duration="0:0:0.1"/>
        </Storyboard>
        <!-- This will run when a TabItem enters the "Selected" state -->
        <Storyboard x:Key="ItemStoryBoard_Selected">
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" To="{StaticResource ItemMargin_Selected}" FillBehavior="HoldEnd" Duration="0:0:0.1"/>
        </Storyboard>
        <!-- This will run when a TabItem enters the "Hover" state -->
        <Storyboard x:Key="ItemStoryBoard_Hover">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" FillBehavior="HoldEnd">
                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="{StaticResource ItemMargin_Hover_Start}"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="{StaticResource ItemMargin_Hover_Final}"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>

        <!-- This will run when a TabItem enters the "Unselected" state -->
        <Storyboard x:Key="SideItemStoryBoard_Unselected">
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" To="{StaticResource SideItemMargin_Base}" FillBehavior="HoldEnd" Duration="0:0:0.1"/>
        </Storyboard>
        <!-- This will run when a TabItem enters the "Selected" state -->
        <Storyboard x:Key="SideItemStoryBoard_Selected">
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" To="{StaticResource SideItemMargin_Selected}" FillBehavior="HoldEnd" Duration="0:0:0.1"/>
        </Storyboard>
        <!-- This will run when a TabItem enters the "Hover" state -->
        <Storyboard x:Key="SideItemStoryBoard_Hover">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" FillBehavior="HoldEnd">
                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="{StaticResource SideItemMargin_Hover_Start}"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="{StaticResource SideItemMargin_Hover_Final}"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ItemStoryBoard_FadeIn">
            <DoubleAnimation Storyboard.TargetProperty="Content.Opacity" From="0.0" To="1.0" FillBehavior="HoldEnd" Duration="0:0:0.5"/>
        </Storyboard>

        <Storyboard x:Key="ItemStoryBoard_FadeOut">
            <DoubleAnimation Storyboard.TargetProperty="Content.Opacity" From="1.0" To="0.0" FillBehavior="HoldEnd" Duration="0:0:0.5"/>
        </Storyboard>

        <Storyboard x:Key="ButtonStoryBoard_Unselected">
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_HoverBackgroundBrush}" To="{StaticResource Item_BackgroundBrush_Unselected}"/>
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_HoverBorderBrush}" To="{StaticResource Item_Border_Unselected}"/>
            <local:BrushAnimation Storyboard.TargetProperty="Foreground" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_TextBrush_Hover}" To="{StaticResource Item_TextBrush_Unselected}"/>
        </Storyboard>
        <Storyboard x:Key="ButtonStoryBoard_Hover">
            <local:BrushAnimation Storyboard.TargetProperty="Foreground" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_TextBrush_Unselected}" To="{StaticResource Item_TextBrush_Hover}"/>
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_Border_Unselected}" To="{StaticResource Item_HoverBorderBrush}"/>
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" Duration="0:0:0.2" FillBehavior="HoldEnd" To="2,2,2,2"/>
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_BackgroundBrush_Unselected}" To="{StaticResource Item_HoverBackgroundBrush}"/>
        </Storyboard>

        <Storyboard x:Key="Field_Hover">
            <local:BrushAnimation Storyboard.TargetProperty="Foreground" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_TextBrush_Unselected}" To="{StaticResource Item_TextBrush_Hover}"/>
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_Border_Unselected}" To="{StaticResource Item_HoverBorderBrush}"/>
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_BackgroundBrush_Unselected}" To="{StaticResource Item_HoverBackgroundBrush}"/>
        </Storyboard>

        <Storyboard x:Key="GridRow_Hover">
            <local:BrushAnimation Storyboard.TargetProperty="Foreground" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_TextBrush_Unselected}" To="{StaticResource Item_TextBrush_Hover}"/>
            <local:BrushAnimation Storyboard.TargetProperty="Background" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_BackgroundBrush_Unselected}" To="{StaticResource Item_HoverBackgroundBrush}"/>
        </Storyboard>

        <Storyboard x:Key="GridRow_Unselected">
            <local:BrushAnimation Storyboard.TargetProperty="Foreground" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_TextBrush_Hover}" To="{StaticResource Item_TextBrush_Unselected}"/>
            <local:BrushAnimation Storyboard.TargetProperty="Background" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_HoverBackgroundBrush}" To="{StaticResource Item_BackgroundBrush_Unselected}"/>
        </Storyboard>

        <!-- The Main TabControl Style. -->
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Border Background="{StaticResource Item_BackgroundBrush}" Padding="{StaticResource ItemPanel_Padding}">
                                <!-- This is the area in which TabItems (the strips) will be drawn. -->
                                <TabPanel IsItemsHost="True"/>
                            </Border>

                            <Border BorderThickness="1,0,1,1" Grid.Row="1" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Background="{StaticResource BackgroundBrush_Base}">
                                <!-- This is the first/outer Border drawn on the TabPage -->
                                <Border BorderThickness="1"  BorderBrush="{StaticResource InnerBorderBrushDark}" CornerRadius="3" Margin="2">
                                    <Border BorderThickness="1" BorderBrush="{StaticResource InnerBorderBrushBright}" CornerRadius="2" Margin="0" Padding="2,2,3,3">
                                        <!-- This is where the Content of the selected TabPage will be rendered. -->
                                        <ContentPresenter ContentSource="SelectedContent" Margin="0"/>
                                    </Border>
                                </Border>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- The Main Style for TabItems (strips). -->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <!-- The Grid helps defining the general height of TabItems. -->
                        <Grid Height="35" VerticalAlignment="Bottom">
                            <Border Name="Border" Background="{StaticResource Item_BackgroundBrush_Unselected}" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Margin="{StaticResource ItemMargin_Selected}" BorderThickness="2,1,1,0" CornerRadius="3,3,0,0">
                                <!-- This is where the Content of the TabItem will be rendered. -->
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="7,2,12,2" RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- The appearance of a TabItem when it's inactive/unselected -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="sbUnselected" Storyboard="{StaticResource ItemStoryBoard_Unselected}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="90" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Unselected}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_Border_Unselected}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Unselected}" />
                                <!-- Except for the selected TabItem, tabs are to appear smaller in height. -->
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource ItemMargin_Base}"/>
                            </MultiTrigger>

                            <!-- The appearance of a TabItem when it's disabled (in addition to Selected=False) -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Panel.ZIndex" Value="80" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_DisabledBorderBrush}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Disabled}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Disabled}" />
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource ItemMargin_Base}"/>
                            </Trigger>

                            <!-- The appearance of a TabItem when the mouse hovers over it -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Hover_Exit"/>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource ItemStoryBoard_Hover}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Hover_Exit" Storyboard="{StaticResource ItemStoryBoard_Unselected}"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="99" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Hover}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Item_HoverBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2,1,1,1" />
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource Item_HoverBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource ItemMargin_Hover_Final}"/>
                            </MultiTrigger>

                            <!-- The appearance of a TabItem when it's active/selected -->
                            <Trigger Property="IsSelected" Value="True">
                                <!-- The Triggers required to animate the TabItem when it enters/leaves the "Selected" state (added in part two) -->
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Selected_Exit"/>
                                    <BeginStoryboard x:Name="sbSelected" Storyboard="{StaticResource ItemStoryBoard_Selected}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Selected_Exit" Storyboard="{StaticResource ItemStoryBoard_Unselected}"/>
                                </Trigger.ExitActions>
                                <!-- We want the selected TabItem to always be on top. -->
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_BorderBrush_Selected}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Selected}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Selected}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource ItemMargin_Selected}"/>
                            </Trigger>

                            <EventTrigger RoutedEvent="Selector.Unselected">
                                <BeginStoryboard x:Name="sbFadeOut" Storyboard="{StaticResource ItemStoryBoard_FadeOut}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Selector.Selected">
                                <BeginStoryboard x:Name="sbFadeIn" Storyboard="{StaticResource ItemStoryBoard_FadeIn}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SideTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="TabStripPlacement" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="13*"/>
                            </Grid.ColumnDefinitions>

                            <Border Padding="{StaticResource SideItemPanel_Padding}">
                                <!-- This is the area in which TabItems (the strips) will be drawn. -->
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <TabPanel IsItemsHost="True"/>
                                </ScrollViewer>
                            </Border>

                            <Border BorderThickness="1,1,1,1" Grid.Column="1" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Background="{StaticResource BackgroundBrush_Base}">
                                <!-- This is the first/outer Border drawn on the TabPage -->
                                <Border BorderThickness="1"  BorderBrush="{StaticResource InnerBorderBrushDark}" CornerRadius="3" Margin="2">
                                    <Border BorderThickness="1" BorderBrush="{StaticResource InnerBorderBrushBright}" CornerRadius="2" Margin="0" Padding="2,2,3,3">
                                        <!-- This is where the Content of the selected TabPage will be rendered. -->
                                        <ContentPresenter ContentSource="SelectedContent" Margin="0"/>
                                    </Border>
                                </Border>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SideTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <!-- The Grid helps defining the general height of TabItems. -->
                        <Grid Height="35">
                            <Border Name="Border" Background="{StaticResource Item_BackgroundBrush_Unselected}" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Margin="{StaticResource SideItemMargin_Selected}" BorderThickness="2,1,1,2" CornerRadius="3,0,0,3">
                                <!-- This is where the Content of the TabItem will be rendered. -->
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="7,2,12,2" RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- The appearance of a TabItem when it's inactive/unselected -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="sbUnselected" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="90" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Unselected}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_Border_Unselected}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Unselected}" />
                                <!-- Except for the selected TabItem, tabs are to appear smaller in height. -->
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Base}"/>
                            </MultiTrigger>

                            <!-- The appearance of a TabItem when it's disabled (in addition to Selected=False) -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Panel.ZIndex" Value="80" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_DisabledBorderBrush}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Disabled}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Disabled}" />
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Base}"/>
                            </Trigger>

                            <!-- The appearance of a TabItem when the mouse hovers over it -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Hover_Exit"/>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource SideItemStoryBoard_Hover}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Hover_Exit" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="99" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Hover}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Item_HoverBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2,1,1,1" />
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource Item_HoverBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Hover_Final}"/>
                            </MultiTrigger>

                            <!-- The appearance of a TabItem when it's active/selected -->
                            <Trigger Property="IsSelected" Value="True">
                                <!-- The Triggers required to animate the TabItem when it enters/leaves the "Selected" state (added in part two) -->
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Selected_Exit"/>
                                    <BeginStoryboard x:Name="sbSelected" Storyboard="{StaticResource SideItemStoryBoard_Selected}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Selected_Exit" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </Trigger.ExitActions>
                                <!-- We want the selected TabItem to always be on top. -->
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_BorderBrush_Selected}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SideItem_BackgroundBrush_Selected}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Selected}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Selected}"/>
                            </Trigger>

                            <!--<EventTrigger RoutedEvent="Selector.Unselected">
                                <BeginStoryboard x:Name="sbFadeOut" Storyboard="{StaticResource ItemStoryBoard_FadeOut}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Selector.Selected">
                                <BeginStoryboard x:Name="sbFadeIn" Storyboard="{StaticResource ItemStoryBoard_FadeIn}"/>
                            </EventTrigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" Background="{StaticResource Item_BackgroundBrush_Unselected}" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Margin="{StaticResource ItemMargin_Base}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" Padding="3,3,3,3">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" Margin="7,2,7,2" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="False"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="sbUnselected" Storyboard="{StaticResource ButtonStoryBoard_Unselected}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition Property="Border.IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_DisabledBorderBrush}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Disabled}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Disabled}" />
                            </MultiTrigger>

                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource ButtonStoryBoard_Hover}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbHover"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="FlatButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" Background="Transparent" BorderBrush="Transparent" Margin="5,5,5,5" BorderThickness="2,2,2,2">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Item_HoverBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2,2,2,2" />
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource Item_HoverBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" Padding="5" Margin="2" BorderThickness="2" CornerRadius="0" Background="Transparent" BorderBrush="Transparent" >

                            <TextBlock TextAlignment="Center">
                                <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource ButtonStoryBoard_Hover}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbHover"/>
                                </Trigger.ExitActions>
                                <Setter TargetName="Border" Property="BorderThickness" Value="2,2,2,2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="Border"
                                Grid.ColumnSpan="2"
                                CornerRadius="0"
                                Background="{StaticResource Item_BackgroundBrush_Unselected}"
                                BorderBrush="{StaticResource InnerBorderBrushBright}"
                                BorderThickness="2" />
                            <Border
                                Grid.Column="0"
                                CornerRadius="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="10" />
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"    
                                Fill="Green"
                                Stroke="Black"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 8 12 L 16 0 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Black" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Black" />
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter TargetName="Arrow" Property="Fill" Value="Black" />
                            </Trigger>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource ButtonStoryBoard_Hover}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbHover"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Unselected}" />
            <Setter Property="BorderBrush" Value="{StaticResource InnerBorderBrushBright}" />
            <Setter Property="Background" Value="{StaticResource Item_BackgroundBrush_Unselected}" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="{StaticResource Item_BackgroundBrush_Unselected}"
                                        BorderThickness="2"
                                        BorderBrush="{StaticResource InnerBorderBrushBright}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border Name="Border" Background="Transparent" BorderBrush="{StaticResource InnerBorderBrushBright}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3">
                            <ScrollViewer>
                                <ItemsPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="7,2,7,2"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="{StaticResource Item_BackgroundBrush_Unselected}" BorderBrush="{StaticResource Item_BorderBrush_Selected}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="ContentSite" Margin="7,2,7,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- The appearance of a ListViewItem when it's inactive/unselected -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="sbUnselected" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="90" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Unselected}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_Border_Unselected}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Unselected}" />
                                <!-- Except for the selected ListViewItem, tabs are to appear smaller in height. -->
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Base}"/>
                            </MultiTrigger>

                            <!-- The appearance of a ListViewItem when it's disabled (in addition to Selected=False) -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Panel.ZIndex" Value="80" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_DisabledBorderBrush}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Disabled}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Disabled}" />
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Base}"/>
                            </Trigger>

                            <!-- The appearance of a ListViewItem when the mouse hovers over it -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Hover_Exit"/>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource SideItemStoryBoard_Hover}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Hover_Exit" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="99" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Hover}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Item_HoverBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2,1,1,1" />
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource Item_HoverBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Hover_Final}"/>
                            </MultiTrigger>

                            <!-- The appearance of a ListViewItem when it's active/selected -->
                            <Trigger Property="IsSelected" Value="True">
                                <!-- The Triggers required to animate the ListViewItem when it enters/leaves the "Selected" state (added in part two) -->
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Selected_Exit"/>
                                    <BeginStoryboard x:Name="sbSelected" Storyboard="{StaticResource SideItemStoryBoard_Selected}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Selected_Exit" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </Trigger.ExitActions>
                                <!-- We want the selected ListViewItem to always be on top. -->
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_BorderBrush_Selected}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SideListViewItem_BackgroundBrush_Selected}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Selected}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Selected}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="SeparatorBrush" Value="{StaticResource InnerBorderBrushDark}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid Height="35" VerticalAlignment="Bottom">
                            <Border Name="Border" Background="{StaticResource Item_BackgroundBrush_Selected}" BorderBrush="{StaticResource Item_BorderBrush_Selected}" BorderThickness="1,1,0,1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True" Margin="{StaticResource GridHeader_Base}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource Field_Hover}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbHover"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{StaticResource Item_BackgroundBrush_Disabled}"></Setter>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="{StaticResource Item_BackgroundBrush_Unselected}"></Setter>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRow}">
                        <Border x:Name="DGR_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <DataGridCellsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource GridRow_Hover}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbHover"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="Transparent" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="sbSelected" Storyboard="{StaticResource GridRow_Hover}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbSelected"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="AlternationCount" Value="2" />
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderBrush" Value="{StaticResource InnerBorderBrushBright}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2" CornerRadius="5" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" CornerRadius="1" Background="{StaticResource InnerBorderBrushDark}" BorderBrush="{StaticResource InnerBorderBrushBright}" BorderThickness="2">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource TextBrush_ForBlack}" Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_HoverBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Name="Border" CornerRadius="3" Background="{StaticResource InnerBorderBrushDark}" BorderBrush="Transparent" BorderThickness="1" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_HoverBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Panel.ZIndex" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{StaticResource Item_BackgroundBrush}" CornerRadius="3" Opacity="0.2" BorderBrush="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ScrollBar">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="20" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="40"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition MaxWidth="40"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.RowSpan="3" Background="Transparent" BorderBrush="Transparent" />
                                    <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarButton}" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                                    <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Margin="2,9,2,9" Command="ScrollBar.PageLeftCommand" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,6,1,6" />
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Margin="2,9,2,9" Command="ScrollBar.PageRightCommand" />
                                        </Track.IncreaseRepeatButton>
                                    </Track>
                                    <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarButton}" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="20"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="40"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition MaxHeight="40"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.RowSpan="3" Background="Transparent" BorderBrush="Transparent" />
                                    <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarButton}" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                                    <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Margin="9,2,9,2" Command="ScrollBar.PageUpCommand" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" Margin="6,1,6,1"/>
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Margin="9,2,9,2" Command="ScrollBar.PageDownCommand" />
                                        </Track.IncreaseRepeatButton>
                                    </Track>
                                    <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarButton}" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="FrameworkElement" x:Key="VisibleAnimation">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="Opacity" Value="0"/>
            <Style.Triggers>
                <Trigger Property="Visibility" Value="Visible">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.5"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>