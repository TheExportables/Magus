<Application x:Class="Magus.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Magus.Controls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Color x:Key="BorderColor_Base">#000</Color>
        <Color x:Key="BackgroundColor_Base">#FFDAE4D8</Color>

        <SolidColorBrush x:Key="BackgroundBrush_Base" Color="Transparent"/>
        <SolidColorBrush x:Key="InnerBorderBrushDark" Color="#FF0A4900"/>

        <LinearGradientBrush x:Key="InnerBorderBrushBright" StartPoint="0,0" EndPoint="1,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0" Color="Black"/>
                <GradientStop Offset="1" Color="#FF00FF23"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Item_BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0.98" Color="Transparent"/>
                <GradientStop Offset="0.99" Color="{StaticResource BorderColor_Base}"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Item_BackgroundBrush_Disabled" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#EEE" Offset="0"/>
                <GradientStop Color="#BBB" Offset="0.98"/>
                <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.99"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Item_BackgroundBrush_Selected" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Green" Offset="0.1" />
                <GradientStop Color="Black" Offset="0.11" />
                <GradientStop Color="White" Offset="0.5" />
                <GradientStop Color="{StaticResource BackgroundColor_Base}" Offset="1.0"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SideItem_BackgroundBrush_Selected" StartPoint="0,0.5" EndPoint="1,0.5">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Green" Offset="0.01" />
                <GradientStop Color="Black" Offset="0.11" />
                <GradientStop Color="White" Offset="0.3" />
                <GradientStop Color="{StaticResource BackgroundColor_Base}" Offset="1.0"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        
        <LinearGradientBrush x:Key="SideListViewItem_BackgroundBrush_Selected" StartPoint="0, 0.5" EndPoint="1,0.5">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Green" Offset="0.01"/>
                <GradientStop Color="Black" Offset="0.02"/>
                <GradientStop Color="White" Offset="0.05"/>
                <GradientStop Color="{StaticResource BackgroundColor_Base}" Offset="1.0"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Name="Item_BackgroundBrush_Unselected" x:Key="Item_BackgroundBrush_Unselected" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFE8FFF5" Offset="0.0"/>
                <GradientStop Color="#FFDFF6E4" Offset="0.3"/>
                <GradientStop Color="#FFC7EECE" Offset="0.7"/>
                <GradientStop Color="#FFB9DEC3" Offset="0.98"/>
                <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.99"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Item_HoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF04FF27" Offset="0.3" />
            <GradientStop Color="#FF008118" Offset="0.51" />
            <GradientStop Color="#FF04FF27" Offset="0.98" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="Item_TextBrush_Unselected" Color="#FF0D4428" />
        <SolidColorBrush x:Key="Item_TextBrush_Disabled" Color="#888" />
        <SolidColorBrush x:Key="Item_TextBrush_Hover" Color="Black" />
        <SolidColorBrush x:Key="Item_TextBrush_Selected" Color="#FF145F39" />
        <SolidColorBrush x:Key="TextBrush_ForBlack" Color="#FF008506"/>

        <LinearGradientBrush x:Key="Item_DisabledBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#CCC" Offset="0"/>
            <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.8"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Item_BorderBrush_Selected" Color="{StaticResource BorderColor_Base}" />
        <LinearGradientBrush x:Key="Item_Border_Unselected" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#AAA" Offset="0"/>
            <GradientStop Color="{StaticResource BorderColor_Base}" Offset="0.8"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Item_HoverBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0.98" Color="DarkGreen"/>
                <GradientStop Offset="0.99" Color="{StaticResource BorderColor_Base}"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- 
            Margins for TabItems - these will be set in the respective triggers.
         -->
        <Thickness x:Key="ItemMargin_Base">0,8,-4,0</Thickness>
        <Thickness x:Key="ItemMargin_Selected">-4,0,-4,0</Thickness>
        <Thickness x:Key="ItemMargin_Hover_Start">0,2,0,0</Thickness>
        <Thickness x:Key="ItemMargin_Hover_Final">0,4,0,0</Thickness>
        <Thickness x:Key="ItemPanel_Padding">4,0,0,0</Thickness>

        <Thickness x:Key="SideItemMargin_Base">8,0,0,-4</Thickness>
        <Thickness x:Key="SideItemMargin_Selected">0,-4,0,-4</Thickness>
        <Thickness x:Key="SideItemMargin_Hover_Start">2,0,0,0</Thickness>
        <Thickness x:Key="SideItemMargin_Hover_Final">4,0,0,0</Thickness>
        <Thickness x:Key="SideItemPanel_Padding">0,4,0,0</Thickness>

        <Thickness x:Key="Button_Base">4,4,4,4</Thickness>
        <Thickness x:Key="Button_Hover">8,8,8,8</Thickness>
        
        <Thickness x:Key="Padding_Form_Inner">10,10,10,10</Thickness>
        <Thickness x:Key="Padding_Form_Outer">20,20,20,20</Thickness>
        
        <!-- This will run when a TabItem enters the "Unselected" state -->
        <Storyboard x:Key="ItemStoryBoard_Unselected">
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" To="{StaticResource ItemMargin_Base}" FillBehavior="HoldEnd" Duration="0:0:0.1"/>
        </Storyboard>
        <!-- This will run when a TabItem enters the "Selected" state -->
        <Storyboard x:Key="ItemStoryBoard_Selected">
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" To="{StaticResource ItemMargin_Selected}" FillBehavior="HoldEnd" Duration="0:0:0.1"/>
        </Storyboard>
        <!-- This will run when a TabItem enters the "Hover" state -->
        <Storyboard x:Key="ItemStoryBoard_Hover">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" FillBehavior="HoldEnd">
                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="{StaticResource ItemMargin_Hover_Start}"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="{StaticResource ItemMargin_Hover_Final}"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>

        <!-- This will run when a TabItem enters the "Unselected" state -->
        <Storyboard x:Key="SideItemStoryBoard_Unselected">
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" To="{StaticResource SideItemMargin_Base}" FillBehavior="HoldEnd" Duration="0:0:0.1"/>
        </Storyboard>
        <!-- This will run when a TabItem enters the "Selected" state -->
        <Storyboard x:Key="SideItemStoryBoard_Selected">
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" To="{StaticResource SideItemMargin_Selected}" FillBehavior="HoldEnd" Duration="0:0:0.1"/>
        </Storyboard>
        <!-- This will run when a TabItem enters the "Hover" state -->
        <Storyboard x:Key="SideItemStoryBoard_Hover">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Margin" FillBehavior="HoldEnd">
                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="{StaticResource SideItemMargin_Hover_Start}"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="{StaticResource SideItemMargin_Hover_Final}"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ItemStoryBoard_FadeIn">
            <DoubleAnimation Storyboard.TargetProperty="Content.Opacity" From="0.0" To="1.0" FillBehavior="HoldEnd" Duration="0:0:0.5"/>
        </Storyboard>

        <Storyboard x:Key="ItemStoryBoard_FadeOut">
            <DoubleAnimation Storyboard.TargetProperty="Content.Opacity" From="1.0" To="0.0" FillBehavior="HoldEnd" Duration="0:0:0.5"/>
        </Storyboard>

        <Storyboard x:Key="ButtonStoryBoard_Unselected">
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_HoverBackgroundBrush}" To="{StaticResource Item_BackgroundBrush_Unselected}"/>
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_HoverBorderBrush}" To="{StaticResource Item_Border_Unselected}"/>
            <local:BrushAnimation Storyboard.TargetProperty="Foreground" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_TextBrush_Hover}" To="{StaticResource Item_TextBrush_Unselected}"/>
        </Storyboard>
        <Storyboard x:Key="ButtonStoryBoard_Hover">
            <local:BrushAnimation Storyboard.TargetProperty="Foreground" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_TextBrush_Unselected}" To="{StaticResource Item_TextBrush_Hover}"/>
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_Border_Unselected}" To="{StaticResource Item_HoverBorderBrush}"/>
            <ThicknessAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness" Duration="0:0:0.2" FillBehavior="HoldEnd" To="2,2,2,2"/>
            <local:BrushAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" Duration="0:0:0.2" FillBehavior="HoldEnd" From="{StaticResource Item_BackgroundBrush_Unselected}" To="{StaticResource Item_HoverBackgroundBrush}"/>
        </Storyboard>
        
        <!-- The Main TabControl Style. -->
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Border Background="{StaticResource Item_BackgroundBrush}" Padding="{StaticResource ItemPanel_Padding}">
                                <!-- This is the area in which TabItems (the strips) will be drawn. -->
                                <TabPanel IsItemsHost="True"/>
                            </Border>

                            <Border BorderThickness="1,0,1,1" Grid.Row="1" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Background="{StaticResource BackgroundBrush_Base}">
                                <!-- This is the first/outer Border drawn on the TabPage -->
                                <Border BorderThickness="1"  BorderBrush="{StaticResource InnerBorderBrushDark}" CornerRadius="3" Margin="2">
                                    <Border BorderThickness="1" BorderBrush="{StaticResource InnerBorderBrushBright}" CornerRadius="2" Margin="0" Padding="2,2,3,3">
                                        <!-- This is where the Content of the selected TabPage will be rendered. -->
                                        <ContentPresenter ContentSource="SelectedContent" Margin="0"/>
                                    </Border>
                                </Border>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- The Main Style for TabItems (strips). -->
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <!-- The Grid helps defining the general height of TabItems. -->
                        <Grid Height="35" VerticalAlignment="Bottom">
                            <Border Name="Border" Background="{StaticResource Item_BackgroundBrush_Unselected}" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Margin="{StaticResource ItemMargin_Selected}" BorderThickness="2,1,1,0" CornerRadius="3,3,0,0">
                                <!-- This is where the Content of the TabItem will be rendered. -->
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="7,2,12,2" RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- The appearance of a TabItem when it's inactive/unselected -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="sbUnselected" Storyboard="{StaticResource ItemStoryBoard_Unselected}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="90" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Unselected}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_Border_Unselected}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Unselected}" />
                                <!-- Except for the selected TabItem, tabs are to appear smaller in height. -->
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource ItemMargin_Base}"/>
                            </MultiTrigger>

                            <!-- The appearance of a TabItem when it's disabled (in addition to Selected=False) -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Panel.ZIndex" Value="80" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_DisabledBorderBrush}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Disabled}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Disabled}" />
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource ItemMargin_Base}"/>
                            </Trigger>

                            <!-- The appearance of a TabItem when the mouse hovers over it -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Hover_Exit"/>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource ItemStoryBoard_Hover}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Hover_Exit" Storyboard="{StaticResource ItemStoryBoard_Unselected}"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="99" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Hover}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Item_HoverBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2,1,1,1" />
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource Item_HoverBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource ItemMargin_Hover_Final}"/>
                            </MultiTrigger>

                            <!-- The appearance of a TabItem when it's active/selected -->
                            <Trigger Property="IsSelected" Value="True">
                                <!-- The Triggers required to animate the TabItem when it enters/leaves the "Selected" state (added in part two) -->
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Selected_Exit"/>
                                    <BeginStoryboard x:Name="sbSelected" Storyboard="{StaticResource ItemStoryBoard_Selected}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Selected_Exit" Storyboard="{StaticResource ItemStoryBoard_Unselected}"/>
                                </Trigger.ExitActions>
                                <!-- We want the selected TabItem to always be on top. -->
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_BorderBrush_Selected}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Selected}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Selected}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource ItemMargin_Selected}"/>
                            </Trigger>
                            
                            <EventTrigger RoutedEvent="Selector.Unselected">
                                <BeginStoryboard x:Name="sbFadeOut" Storyboard="{StaticResource ItemStoryBoard_FadeOut}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Selector.Selected">
                                <BeginStoryboard x:Name="sbFadeIn" Storyboard="{StaticResource ItemStoryBoard_FadeIn}"/>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SideTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="TabStripPlacement" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="13*"/>
                            </Grid.ColumnDefinitions>

                            <Border Padding="{StaticResource SideItemPanel_Padding}">
                                <!-- This is the area in which TabItems (the strips) will be drawn. -->
                                <TabPanel IsItemsHost="True"/>
                            </Border>

                            <Border BorderThickness="1,1,1,1" Grid.Column="1" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Background="{StaticResource BackgroundBrush_Base}">
                                <!-- This is the first/outer Border drawn on the TabPage -->
                                <Border BorderThickness="1"  BorderBrush="{StaticResource InnerBorderBrushDark}" CornerRadius="3" Margin="2">
                                    <Border BorderThickness="1" BorderBrush="{StaticResource InnerBorderBrushBright}" CornerRadius="2" Margin="0" Padding="2,2,3,3">
                                        <!-- This is where the Content of the selected TabPage will be rendered. -->
                                        <ContentPresenter ContentSource="SelectedContent" Margin="0"/>
                                    </Border>
                                </Border>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SideTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <!-- The Grid helps defining the general height of TabItems. -->
                        <Grid Height="35">
                            <Border Name="Border" Background="{StaticResource Item_BackgroundBrush_Unselected}" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Margin="{StaticResource SideItemMargin_Selected}" BorderThickness="2,1,1,2" CornerRadius="3,0,0,3">
                                <!-- This is where the Content of the TabItem will be rendered. -->
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="7,2,12,2" RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- The appearance of a TabItem when it's inactive/unselected -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="sbUnselected" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="90" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Unselected}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_Border_Unselected}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Unselected}" />
                                <!-- Except for the selected TabItem, tabs are to appear smaller in height. -->
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Base}"/>
                            </MultiTrigger>

                            <!-- The appearance of a TabItem when it's disabled (in addition to Selected=False) -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Panel.ZIndex" Value="80" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_DisabledBorderBrush}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Disabled}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Disabled}" />
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Base}"/>
                            </Trigger>

                            <!-- The appearance of a TabItem when the mouse hovers over it -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Hover_Exit"/>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource SideItemStoryBoard_Hover}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Hover_Exit" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="99" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Hover}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Item_HoverBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2,1,1,1" />
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource Item_HoverBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Hover_Final}"/>
                            </MultiTrigger>

                            <!-- The appearance of a TabItem when it's active/selected -->
                            <Trigger Property="IsSelected" Value="True">
                                <!-- The Triggers required to animate the TabItem when it enters/leaves the "Selected" state (added in part two) -->
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Selected_Exit"/>
                                    <BeginStoryboard x:Name="sbSelected" Storyboard="{StaticResource SideItemStoryBoard_Selected}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Selected_Exit" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </Trigger.ExitActions>
                                <!-- We want the selected TabItem to always be on top. -->
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_BorderBrush_Selected}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SideItem_BackgroundBrush_Selected}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Selected}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Selected}"/>
                            </Trigger>

                            <!--<EventTrigger RoutedEvent="Selector.Unselected">
                                <BeginStoryboard x:Name="sbFadeOut" Storyboard="{StaticResource ItemStoryBoard_FadeOut}"/>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Selector.Selected">
                                <BeginStoryboard x:Name="sbFadeIn" Storyboard="{StaticResource ItemStoryBoard_FadeIn}"/>
                            </EventTrigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" Background="{StaticResource Item_BackgroundBrush_Unselected}" BorderBrush="{StaticResource Item_BorderBrush_Selected}" Margin="{StaticResource ItemMargin_Base}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" Padding="3,3,3,3">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content" Margin="7,2,7,2" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="sbUnselected" Storyboard="{StaticResource ButtonStoryBoard_Unselected}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected"/>
                                </Trigger.ExitActions>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_DisabledBorderBrush}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Disabled}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Disabled}" />
                            </Trigger>

                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource ButtonStoryBoard_Hover}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbHover"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="FlatButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border" Background="Transparent" BorderBrush="Transparent" Margin="5,5,5,5" BorderThickness="2,2,2,2">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Content"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Item_HoverBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2,2,2,2" />
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource Item_HoverBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type ListView}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border Name="Border" Background="Transparent" BorderBrush="{StaticResource InnerBorderBrushBright}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3">
                            <ScrollViewer>
                                <ItemsPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="7,2,7,2"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="{StaticResource Item_BackgroundBrush_Unselected}" BorderBrush="{StaticResource Item_BorderBrush_Selected}" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="ContentSite" Margin="7,2,7,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- The appearance of a ListViewItem when it's inactive/unselected -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="sbUnselected" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="90" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Unselected}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_Border_Unselected}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Unselected}" />
                                <!-- Except for the selected ListViewItem, tabs are to appear smaller in height. -->
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Base}"/>
                            </MultiTrigger>

                            <!-- The appearance of a ListViewItem when it's disabled (in addition to Selected=False) -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Panel.ZIndex" Value="80" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_DisabledBorderBrush}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Item_BackgroundBrush_Disabled}" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Disabled}" />
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Base}"/>
                            </Trigger>

                            <!-- The appearance of a ListViewItem when the mouse hovers over it -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Border.IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Hover_Exit"/>
                                    <BeginStoryboard x:Name="sbHover" Storyboard="{StaticResource SideItemStoryBoard_Hover}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Hover_Exit" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </MultiTrigger.ExitActions>
                                <Setter Property="Panel.ZIndex" Value="99" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Hover}" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Item_HoverBorderBrush}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2,1,1,1" />
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource Item_HoverBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Hover_Final}"/>
                            </MultiTrigger>

                            <!-- The appearance of a ListViewItem when it's active/selected -->
                            <Trigger Property="IsSelected" Value="True">
                                <!-- The Triggers required to animate the ListViewItem when it enters/leaves the "Selected" state (added in part two) -->
                                <Trigger.EnterActions>
                                    <StopStoryboard BeginStoryboardName="sbUnselected_Selected_Exit"/>
                                    <BeginStoryboard x:Name="sbSelected" Storyboard="{StaticResource SideItemStoryBoard_Selected}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="sbUnselected_Selected_Exit" Storyboard="{StaticResource SideItemStoryBoard_Unselected}"/>
                                </Trigger.ExitActions>
                                <!-- We want the selected ListViewItem to always be on top. -->
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Item_BorderBrush_Selected}" />
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SideListViewItem_BackgroundBrush_Selected}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                                <Setter Property="Foreground" Value="{StaticResource Item_TextBrush_Selected}"/>
                                <Setter TargetName="Border" Property="Margin" Value="{StaticResource SideItemMargin_Selected}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>